general:
  # Commands to run when the WM has started (e.g. to run a script or launch
  # another application). Here we are running a batch script to start Zebar.
  startup_commands: ['shell-exec zebar']

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: true

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: 'window_focus'

gaps:
  # Gap between adjacent windows.
  # inner_gap: '20px'
  inner_gap: '2px'

  # Gap between windows and the screen edge.
  # outer_gap:
    # top: '60px'
    # right: '20px'
    # bottom: '20px'
    # left: '20px'
  outer_gap:
    top: '42px'
    right: '2px'
    bottom: '2px'
    left: '2px'

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: '#ff0000'

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: true
      color: '#d3d3d3'

window_behavior:
  
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: 'tiling'

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true

      # Whether to show floating windows as always on top.
      shown_on_top: false

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false

      # Whether to show fullscreen windows as always on top.
      shown_on_top: true

workspaces:
  - name: '1'
  - name: '2'
  - name: '3'
  - name: '4'
  - name: '5'
  - name: '6'
  - name: '7'
  - name: '8'
  - name: '9'
  - name: '0'

window_rules:
  - commands: ['ignore']
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: 'zebar' }

      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: '[Pp]icture.in.[Pp]icture' }
        window_process: { regex: 'Chrome' }
        window_class: { regex: 'Chrome_WidgetWin_1|MozillaDialogClass' }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: 'PowerToys.PowerAccent' }
      - window_process: { equals: 'Lively' }
        window_class: { regex: 'HwndWrapper*' }

      # fix for screen snipping/snip and sketch/win+s screenshot key
      - window_title: { regex: 'Screen Snipping' }
      - window_process: { regex: '/ScreenSketch|ScreenClippingHost/' }
      - window_process: { regex: 'SnippingTool' }

  - commands: ['set-floating']
    match:
      - window_class: { regex: 'SunAwtDialog' } # ensure floating for intellij dialog box
      - window_class: { equals: 'WinListerMain' }
      - window_process: { equals: '1Password' }
      - window_process: { equals: 'Taskmgr' }



binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: 'resize'
    keybindings:
      - commands: ['resize --width -2%']
        bindings: ['h', 'left']
      - commands: ['resize --width +2%']
        bindings: ['l', 'right']
      - commands: ['resize --height +2%']
        bindings: ['k', 'up']
      - commands: ['resize --height -2%']
        bindings: ['j', 'down']
      # Press enter/escape to return to default keybindings.
      - commands: ['wm-disable-binding-mode --name resize']
        bindings: ['escape', 'enter']

  # When enabled, all keybindings are disabled except for alt+shift+p which
  # returns to default keybindings.
  - name: 'pause'
    keybindings:
      - commands: ['wm-disable-binding-mode --name pause']
        bindings: ['alt+shift+p']

keybindings:
  # Shift focus in a given direction.
  - commands: ['focus --direction left']
    bindings: ['alt+h']
  - commands: ['focus --direction right']
    bindings: ['alt+l']
  - commands: ['focus --direction up']
    bindings: ['alt+k']
  - commands: ['focus --direction down']
    bindings: ['alt+j']

  # Move focused window in a given direction.
  - commands: ['move --direction left']
    bindings: ['alt+shift+h']
  - commands: ['move --direction right']
    bindings: ['alt+shift+l']
  - commands: ['move --direction up']
    bindings: ['alt+shift+k']
  - commands: ['move --direction down']
    bindings: ['alt+shift+j']

  # Resize focused window by a percentage or pixel amount.
  - commands: ['resize --width -4%']
    bindings: ['alt+u']
  - commands: ['resize --width +4%']
    bindings: ['alt+p']
  - commands: ['resize --height +4%']
    bindings: ['alt+o']
  - commands: ['resize --height -4%']
    bindings: ['alt+i']

  - commands: ['resize --width -15%']
    bindings: ['alt+shift+u']
  - commands: ['resize --width +15%']
    bindings: ['alt+shift+p']
  - commands: ['resize --height +15%']
    bindings: ['alt+shift+o']
  - commands: ['resize --height -15%']
    bindings: ['alt+shift+i']



  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name 'resize'.
  # - commands: ['wm-enable-binding-mode --name resize']
  #   bindings: ['alt+r']

  # Disables all keybindings until alt+shift+p is pressed again.
  # - commands: ['wm-enable-binding-mode --name pause']
  #   bindings: ['alt+shift+p']

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ['toggle-tiling-direction']
    bindings: ['alt+v']

  # Change focus from tiling windows -> floating -> fullscreen.
  - commands: ['wm-cycle-focus']
    bindings: ['alt+space']

  # Change the focused window to be floating.
  - commands: ['toggle-floating --centered']
    bindings: ['alt+shift+space']

  # Change the focused window to be tiling.
  - commands: ['toggle-tiling']
    bindings: ['alt+t']

  # Change the focused window to be fullscreen.
  - commands: ['toggle-fullscreen']
    bindings: ['alt+shift+f']

  # Minimize focused window.
  - commands: ['toggle-minimized']
    bindings: ['alt+m']

  # Close focused window.
  - commands: ['close']
    bindings: ['alt+shift+q']

  # # Kill GlazeWM process safely.
  # - commands: ['wm-exit']
  #   bindings: ['alt+shift+e']

  # Re-evaluate configuration file.
  - commands: ['wm-reload-config']
    bindings: ['alt+shift+r']

  # Redraw all windows.
  - commands: ['wm-redraw']
    bindings: ['alt+shift+w']

  # Launch CMD terminal. Alternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  # - commands: ['shell-exec cmd']
  #   bindings: ['alt+enter']

  # # Focus the next/previous workspace defined in `workspaces` config.
  - commands: ['focus --next-workspace']
    bindings: ['lwin+right']
  - commands: ['focus --prev-workspace']
    bindings: ['lwin+left']

  # # Focus the workspace that last had focus.
  # - commands: ['focus --recent-workspace']
  #   bindings: ['alt+d']

  # Change focus to a workspace defined in `workspaces` config.
  - commands: ['focus --workspace 1']
    bindings: ['alt+1', 'lwin+1']
  - commands: ['focus --workspace 2']
    bindings: ['alt+2', 'lwin+2']
  - commands: ['focus --workspace 3']
    bindings: ['alt+3', 'lwin+3']
  - commands: ['focus --workspace 4']
    bindings: ['alt+4', 'lwin+4']
  - commands: ['focus --workspace 5']
    bindings: ['alt+5', 'lwin+5']
  - commands: ['focus --workspace 6']
    bindings: ['alt+6', 'lwin+6']
  - commands: ['focus --workspace 7']
    bindings: ['alt+7', 'lwin+7']
  - commands: ['focus --workspace 8']
    bindings: ['alt+8', 'lwin+8']
  - commands: ['focus --workspace 9']
    bindings: ['alt+9', 'lwin+9']
  - commands: ['focus --workspace 0']
    bindings: ['alt+0', 'lwin+0']

  # # Move the focused window's parent workspace to a monitor in a given
  # # direction.
  # - commands: ['move-workspace --direction left']
  #   bindings: ['alt+shift+a']
  # - commands: ['move-workspace --direction right']
  #   bindings: ['alt+shift+f']
  # - commands: ['move-workspace --direction up']
  #   bindings: ['alt+shift+d']
  # - commands: ['move-workspace --direction down']
  #   bindings: ['alt+shift+s']

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ['move --workspace 1', 'wm-redraw']
    bindings: ['alt+shift+1', 'lwin+shift+1']
  - commands: ['move --workspace 2', 'wm-redraw']
    bindings: ['alt+shift+2', 'lwin+shift+2']
  - commands: ['move --workspace 3', 'wm-redraw']
    bindings: ['alt+shift+3', 'lwin+shift+3']
  - commands: ['move --workspace 4', 'wm-redraw']
    bindings: ['alt+shift+4', 'lwin+shift+4']
  - commands: ['move --workspace 5', 'wm-redraw']
    bindings: ['alt+shift+5', 'lwin+shift+5']
  - commands: ['move --workspace 6', 'wm-redraw']
    bindings: ['alt+shift+6', 'lwin+shift+6']
  - commands: ['move --workspace 7', 'wm-redraw']
    bindings: ['alt+shift+7', 'lwin+shift+7']
  - commands: ['move --workspace 8', 'wm-redraw']
    bindings: ['alt+shift+8', 'lwin+shift+8']
  - commands: ['move --workspace 9', 'wm-redraw']
    bindings: ['alt+shift+9', 'lwin+shift+9']
  - commands: ['move --workspace 0', 'wm-redraw']
    bindings: ['alt+shift+0', 'lwin+shift+0']
